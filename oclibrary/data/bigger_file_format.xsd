<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

<!--
********************************************************
    Schema for the file format used in BiGGER
    The initial orders file is generated by dockprep
    The results are added by bigger
********************************************************
>

<!-- Basic types -->

<xs:simpleType name="stringtype">
  <xs:restriction base="xs:string"/>
</xs:simpleType>

<xs:simpleType name="inttype">
  <xs:restriction base="xs:integer"/>
</xs:simpleType>

<xs:simpleType name="dectype">
  <xs:restriction base="xs:decimal"/>
</xs:simpleType>

<xs:simpleType name="booltype">
  <xs:restriction base="xs:boolean"/>
</xs:simpleType>

<xs:complexType name="coordtype">
  <xs:attribute name="X" type="dectype" use="required"/>
  <xs:attribute name="Y" type="dectype" use="required"/>
  <xs:attribute name="Z" type="dectype" use="required"/>
</xs:complexType>

<xs:complexType name="spheretype">
  <xs:attribute name="X" type="dectype" use="required"/>
  <xs:attribute name="Y" type="dectype" use="required"/>
  <xs:attribute name="Z" type="dectype" use="required"/>
  <xs:attribute name="Rad" type="dectype" use="required"/>
  
</xs:complexType>


<xs:complexType name="quaterniontype">
  <xs:attribute name="r" type="dectype" use="required"/>
  <xs:attribute name="i" type="dectype" use="required"/>
  <xs:attribute name="j" type="dectype" use="required"/>
  <xs:attribute name="k" type="dectype" use="required"/>
</xs:complexType>

<xs:complexType name="cuboidtype">
  <xs:sequence>  
    <xs:element name="MinCoord" type="coordtype"/>
    <xs:element name="MaxCoord" type="coordtype"/>  
  </xs:sequence>    
</xs:complexType>

<xs:complexType name="pointsettype">
  <xs:sequence>
    <xs:element name="Point" maxOccurs="unbounded" type="coordtype"/>
  </xs:sequence>
</xs:complexType>

<xs:complexType name="spheresettype">
  <xs:sequence>
    <xs:element name="Sphere" maxOccurs="unbounded" type="spheretype"/>
  </xs:sequence>
</xs:complexType>


<xs:complexType name="DistanceConstraintType">
  <xs:sequence>
    <xs:element name="TargetPoints" type="pointsettype"/>
    <xs:element name="ProbePoints" type="pointsettype"/>
    <xs:element name="Distance" type="dectype"/>
  </xs:sequence>
  <xs:attribute name="Name" type="stringtype" use="required"/>  
</xs:complexType>

<xs:complexType name="BoxConstraintType">
  <xs:sequence>
    <xs:element name="ProbePoint" type="coordtype"/>
    <xs:element name="TargetBox" type="cuboidtype"/>    
  </xs:sequence>
</xs:complexType>

<!-- Docking model -->

<xs:complexType name="ModelType">
  <xs:sequence>    
    <xs:element name="Contact" type="inttype"/>    
    <xs:element name="Translation" type="coordtype"/>    
    <xs:element name="Rotation" type="quaterniontype"/>    
  </xs:sequence>
</xs:complexType>

<!-- Result Models -->

<xs:complexType name="ModelSetType">
  <xs:sequence>
    <xs:element name="Model" 
                maxOccurs="unbounded"
                minOccurs="0"    
                type="ModelType"/>        
  </xs:sequence>
</xs:complexType>

<!-- Additional Scores -->

<xs:complexType name="modelscoretype">  
  <xs:attribute name="Value" type="dectype" use="required"/>  
</xs:complexType>

<xs:complexType name="ScoreType">
  <xs:sequence>
    <xs:element name="ModelScore" 
                maxOccurs="unbounded"
                minOccurs="0"    
                type="modelscoretype"/>
  </xs:sequence>
  <xs:attribute name="ScoreID" type="stringtype" use="required"/>
</xs:complexType>


<!-- 
  Constraints operating together (AND)
  The set of constraints may be empty for an unconstrained docking
  Each set of constraints is an independent docking run
-->

<xs:complexType name="JointConstraintSetType">
  <xs:sequence>  
    <xs:element name="DistanceConstraint" 
                minOccurs="0"
                maxOccurs="unbounded"
                type="DistanceConstraintType"/>
    <xs:element name="BoxConstraint" 
                minOccurs="0"
                maxOccurs="unbounded"
                type ="BoxConstraintType"/>  
    <xs:element name="ComputedModels" 
                minOccurs="0"
                type ="ModelSetType"/>  
    <xs:element name="ComputedScore" 
                minOccurs="0"
                maxOccurs="unbounded"
                type ="ScoreType"/>             
  </xs:sequence>
  <xs:attribute name="Name" type="stringtype" use="required"/>  
  <xs:attribute name="NumModels" type="inttype" use="required"/>  
  <xs:attribute name="MinOverlap" type="inttype" use="required"/>   
</xs:complexType>


<!-- Additional score types -->

<xs:complexType name="RMSDScoreType">
  <xs:sequence>    
    <xs:element name="ScoreID" type="stringtype"/>    
    <xs:element name="Predicted" type="pointsettype"/>    
    <xs:element name="Template" type="pointsettype"/>    
    <xs:element name="FirstProbePoint" type="inttype"/>        
  </xs:sequence>
  <!-- 
    Fit and score flags are presumed true if absent.
    Fit flags control which parts are used to superimpos
    predicted on actual coordinates.
    Score flags control which parts are used to score RMSD.
  -->
  <xs:attribute name="FitTarget" type="booltype"/>    
  <xs:attribute name="FitProbe" type="booltype"/>    
  <xs:attribute name="ScoreTarget" type="booltype"/>    
  <xs:attribute name="ScoreProbe" type="booltype"/>      
</xs:complexType>


<xs:complexType name="ContactScoreType">
  <xs:sequence>    
    <xs:element name="ScoreID" type="stringtype"/>    
  <!-- indexes are determined by the order of the groups -->
    <xs:element name="TargetGroup" 
                maxOccurs="unbounded"                
                type="pointsettype"/>
    <xs:element name="ProbeGroup" 
                maxOccurs="unbounded"                
                type="pointsettype"/>                  
    <xs:element name="Contact">    
        <xs:complexType>
            <xs:attribute name="TargetIx" type="inttype"/>    
            <xs:attribute name="ProbeIx" type="inttype"/>    
            <xs:attribute name="ScoreVal" type="dectype"/>    
        </xs:complexType>        
    </xs:element>
  </xs:sequence>
</xs:complexType>


<!-- 
    Statistics for the whole docking run     
-->

<xs:complexType name="StatsType">
  <xs:sequence>
    <xs:element name="DigitizationTickCount" type="inttype"/>
    <xs:element name="ConstraintsTickCount" type="inttype"/>
    <xs:element name="DomainTickCount" type="inttype"/>
    <xs:element name="ScoringTickCount" type="inttype"/>    
    <xs:element name="TotalTickCount" type="inttype"/>
    <xs:element name="TestedModelsCount" type="inttype"/>
    <xs:element name="InsertedModelsCount" type="inttype"/>    
  </xs:sequence>  
</xs:complexType>

<!-- Docking setup -->

<xs:complexType name="DockParamsType">
  <xs:sequence>
    <xs:element name="TargetFile" type="stringtype"/>
    <xs:element name="ProbeFile" type="stringtype"/>
    <xs:element name="Resolution" type="dectype"/>
    <xs:element name="AddedRadius" type="dectype"/>
    <xs:element name="NumAxisSteps" type="inttype"/>
    <xs:element name="CompletedRotations" type="inttype"/>    
    <xs:element name="TotalRotations" type="inttype"/>
    <xs:element name="SecondsBetweenSaves" type="inttype"/>    
  </xs:sequence>
</xs:complexType>

<!-- A single docking run -->

<xs:complexType name="DockRunType">
  <xs:sequence>
    <xs:element name="DockParameters" type="DockParamsType"/>
    <xs:element name="TargetCoreCuts"
                minOccurs="0"                
                type="spheresettype"/>    
    <xs:element name="ProbeCoreCuts"
                minOccurs="0"                
                type="spheresettype"/>    
    <xs:element name="JointConstraintSet"
                maxOccurs="unbounded"
                minOccurs="0"                
                type="JointConstraintSetType"/>    
    <xs:element name="RMSDScore"
                maxOccurs="unbounded"
                minOccurs="0"                
                type="RMSDScoreType"/>   
    <xs:element name="ContactScore"
                maxOccurs="unbounded"
                minOccurs="0"                
                type="ContactScoreType"/>   
    <xs:element name="Stats" 
                minOccurs="0"
                type ="StatsType"/>   
  </xs:sequence>
</xs:complexType>

<!-- A set of docking runs. This is the root element for an orders file -->

<xs:complexType name="OrdersType">
  <xs:sequence>
    <xs:element name="DockRun" maxOccurs="unbounded" type="DockRunType"/>  
  </xs:sequence>
  <xs:attribute name="Version" type="inttype" use="required"/>    
</xs:complexType>

<!-- Root element -->

<xs:element name="Orders" type="OrdersType"/>

</xs:schema>